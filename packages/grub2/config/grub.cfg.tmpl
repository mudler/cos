set timeout=10

# This below allows for overriding the default values of grub. Its on OEM because its writable, otherwise it makes no sense.
search --no-floppy --label --set=rootOEM @OEM_LABEL@

if [ test -s ($rootOEM)/grub_oem_env ] ; then
  load_env -f ($rootOEM)/grub_oem_env
fi

# Load extra config if file exists and size its not 0
if [ test -s ($rootOEM)/grubcustom ]; then
  source ($rootOEM)/grubcustom
fi


# Set root to the state label
search --no-floppy --label --set=root @STATE_LABEL@

# Save default
if [ "${next_entry}" ]; then
  set default="${next_entry}"
  set selected_entry="${next_entry}"
  set next_entry=
  save_env -f /grub_oem_env next_entry
else
  set default="${saved_entry}"
fi

## Display a default menu entry if set
if [ "${default_menu_entry}" ]; then
  set display_name="${default_menu_entry}"
else
  set display_name="cOS"
fi

## Set a default fallback if set
if [ "${default_fallback}" ]; then
  set fallback="${default_fallback}"
else
  set fallback="0 1 2"
fi

set gfxmode=auto
set gfxpayload=keep
insmod all_video
insmod gfxterm
insmod loopback

menuentry "${display_name}" --id cos {
  set img=/cOS/active.img
  set label=@ACTIVE_LABEL@
  loopback loop0 /$img
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd ${extra_cmdline} ${extra_active_cmdline}
  initrd (loop0)$initramfs
}

menuentry "${display_name} (fallback)" --id fallback {
  set img=/cOS/passive.img
  set label=@PASSIVE_LABEL@
  loopback loop0 /$img
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd ${extra_cmdline} ${extra_passive_cmdline}
  initrd (loop0)$initramfs
}

menuentry "${display_name} recovery" --id recovery {
  if search --no-floppy --file /cOS/recovery.squashfs ; then
    insmod squash4
    set img=/cOS/recovery.squashfs
    set recoverylabel=@RECOVERY_LABEL@
  else
    set img=/cOS/recovery.img
  fi
  search --no-floppy --label --set=root @RECOVERY_LABEL@
  set label=@SYSTEM_LABEL@
  loopback loop0 /$img
  set root=($root)
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd ${extra_cmdline} ${extra_recovery_cmdline}
  initrd (loop0)$initramfs
}
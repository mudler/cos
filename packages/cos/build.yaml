#### system/cos system/cos-container and recovery/cos start here
{{ if or (eq .Values.name "cos-container") (eq .Values.name "cos" ) }}
requires:
# Base distro is not required by other packages to facilitate their usage
# as stand alone packages (e.g. in Dockerfiles), so that it is included here.
- name: "base"
  category: "distro"
  version: ">=0"
- name: "kernel"
  category: "system"
  version: ">=0"
- name: "dracut-initrd"
  category: "system"
  version: ">=0"
- name: "cos-minimal"
  category: "meta"
  version: ">=0"
- name: "cos-verify"
  category: "meta"
  version: ">=0"
- name: "luet-mtree"
  category: "toolchain"
  version: ">=0"
- name: cos-features
  category: system
  version: ">=0"
{{if eq .Values.codename "teal" }}
- name: "elemental-selinux"
  category: "system"
  version: ">=0"
{{end}}

# Templated package https://luet-lab.github.io/docs/docs/concepts/packages/templates/
steps:
- sed -i 's/:BRANDING:/{{.Values.brand_name}}/g' setup.yaml
- sed -i 's/:VERSION:/{{.Values.version}}/g' setup.yaml
- sed -i 's/:PRETTY_NAME:/{{.Values.brand_name}} v{{.Values.version}}/g' setup.yaml
- elemental cloud-init setup.yaml
{{if eq .Values.codename "teal" }}
# semodule mutates few files under /etc, hence we need to call selinux utilities here and not as part of
# elemental-selinux otherwise mutated files are not included as part of the elemental-selinux delta. 

# Need to copy up selinux files to prevent cross-device hardlinks
# Happens if overlayfs docker driver or similar stacks are in use, see https://github.com/SELinuxProject/selinux/issues/343
# this appears to be fixed since libsemanage v3.4 (released on May 2022)
- mv /var/lib/selinux/targeted/active /var/lib/selinux/targeted/previous
- cp --link --recursive /var/lib/selinux/targeted/previous /var/lib/selinux/targeted/active && semodule -i /usr/share/elemental/selinux/elemental.pp
- sed -i "s|^SELINUX=.*|SELINUX=enforcing|g" /etc/selinux/config
{{end}}

# See https://luet-lab.github.io/docs/docs/concepts/packages/specfile/#package-by-container-content
unpack: true

# See https://luet-lab.github.io/docs/docs/concepts/packages/specfile/#requires_final_images
requires_final_images: true

# Files to exclude from the final
# artifact
# See also: https://luet-lab.github.io/docs/docs/concepts/packages/specfile/#excludingincluding-files-explictly
excludes:
- ^/var/cache/luet
- ^/luetbuild
- ^/srv/.*
- ^/root/.bash_history
- ^/run/reboot-needed

# Zypper
- ^/var/lib/zypp
- ^/var/cache/zypp
- ^/usr/share/zypper
- ^/usr/share/zypp
- ^/usr/share/zsh
- ^/usr/share/licenses/zypper
- ^/usr/bin/zypp-.*
- ^/usr/bin/zypper
- ^/usr/lib/zypp$
- ^/usr/lib/zypper
- ^/usr/lib/rpm
- ^/usr/bin/yzpper
- ^/usr/sbin/zypp-.*
- ^/usr/bin/zypp-.*
- ^/usr/bin/susetags2solv
- ^/run/zypp.*
- ^/etc/zypp
- ^/usr/bin/rpm.*
- ^/var/lib/rpm
- ^/usr/lib64/rpm-plugins
# Yast
- ^/var/lib/YaST2

#- ^/usr/local
- ^/usr/local/bin
- ^/usr/local/go
- ^/usr/local/include
- ^/usr/local/lib.*
- ^/usr/local/man
- ^/usr/local/sbin
- ^/usr/local/share
- ^/usr/local/src
- ^/usr/local/games

- ^/etc/hostname
- ^/etc/machine-id

{{ if eq .Values.name "cos-container" }}

- ^/etc/hosts
- ^/proc
- ^/sys
- ^/dev
- ^/tmp
- ^/run

{{ else }}

- ^/tmp/.*
- ^/proc/.*
- ^/sys/.*
- ^/run/.*

{{ end }}
{{- end}}
#### system/cos system/cos-container and recovery/cos end here

#### recovery/cos-img starts here
{{ if eq .Values.name "cos-img" }}
requires:
  - category: "distro"
    name: "base"
    version: ">=0"
copy:
  - package:
      category: "recovery"
      name: "cos"
      version: ">=0"
    source: "/."
    destination: "/recovery"

requires_final_images: true

package_dir: "/output"
steps:
  - mkdir /output
  - mksquashfs /recovery /output/recovery.squashfs -b 1024k
{{- end}}
#### recovery/cos-img ends here

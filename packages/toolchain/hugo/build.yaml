requires:
  - name: "golang"
    category: "build"
    version: ">=0"
env:
{{ template "golang_env" }}
- CGO_ENABLED=1
- LDFLAGS="-s -w"
prelude:
{{ template "golang_deps" .}}
{{ $opts:= dict "version" (printf "v%s" .Values.version) "org" ( index .Values.labels "github.owner" ) "repo" ( index .Values.labels "github.repo" ) }}
{{ template "golang_download_package" $opts}}
{{ template "distro_install_tools" (dict "Values" .Values "Packages" "gcc-c++")}}
steps:
  - |
    PACKAGE_VERSION=${PACKAGE_VERSION%\-*} && \
    cd /luetbuild/go/src/github.com/{{ ( index .Values.labels "github.owner" ) }}/{{.Values.name}} && \
    go build -o {{.Values.name}} -buildmode exe -tags extended --ldflags "$LDFLAGS" && mv {{.Values.name}} /usr/bin/{{.Values.name}}
includes:
  - /usr/bin/{{.Values.name}}
name: Build & test

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      flavor:
        required: true
        type: string

concurrency:
  group: ci-${{ inputs.flavor }}-${{ inputs.arch }}-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Checks cached ISO
        uses: martijnhols/actions-cache/check@v3
        id: cache-check
        env:
          cache-name: pr-iso-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.iso
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Cached ISO
        id: cache-iso
        uses: martijnhols/actions-cache@v3
        env:
          cache-name: pr-iso-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.iso
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Build toolkit
        run: |
          make build
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Build example OS
        run: |
          make build-os
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Build ISO
        run: |
          make build-iso
  
  build-disk:
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Checks cached Disk
        uses: martijnhols/actions-cache/check@v3
        id: cache-check
        env:
          cache-name: pr-disk-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Cached Disk
        id: cache-disk
        uses: martijnhols/actions-cache@v3
        env:
          cache-name: pr-disk-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - if: ${{ steps.cache-check.outputs.cache-hit != 'true' }}
        name: Install to disk
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends qemu-utils coreutils
          make build-os
          sudo -E make build-disk

  test-installer:
    runs-on: macos-12
    needs: build-iso
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
      ELMNTL_ACCEL: hvf
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: tests/go.mod
      - run: |
          git fetch --prune --unshallow
      - name: Cached ISO
        id: cache-iso
        uses: martijnhols/actions-cache@v3
        env:
          cache-name: pr-iso-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.iso
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - name: Run VM script dependencies
        run: |
          brew install bash coreutils
      - name: Prepare test
        run: |
          make ELMNTL_FIRMWARE=$(find /usr/local/Cellar/qemu -name edk2-x86_64-code.fd -print -quit) prepare-installer-test
      - name: Run test-installer
        run: |
          make test-installer
      - name: Stop test VM
        if: always()
        run: |
          make test-clean

  tests-matrix:
    runs-on: macos-12
    needs: build-disk
    env:
      FLAVOR: ${{ inputs.flavor }}
      ARCH: ${{ inputs.arch }}
      ELMNTL_ACCEL: hvf
    strategy:
      matrix:
        test: [ test-smoke, test-hooks, test-recovery, test-fallback, test-reset, test-upgrades-local ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: tests/go.mod
      - run: |
          git fetch --prune --unshallow
      - name: Cached Disk
        id: cache-disk
        uses: martijnhols/actions-cache@v3
        env:
          cache-name: pr-disk-build
        with:
          path: ~/work/elemental-toolkit/elemental-toolkit/build/*.qcow2
          key: ${{ env.cache-name }}-${{ hashFiles('**/toolkit/**', '**/examples/**', '**/Makefile') }}
      - name: Run VM script dependencies
        run: |
          brew install bash coreutils
      - name: Prepare test
        run: |
          make ELMNTL_FIRMWARE=$(find /usr/local/Cellar/qemu -name edk2-x86_64-code.fd -print -quit) prepare-test
      - name: Run test-smoke
        run: |
          make ${{ matrix.test }}
      - name: Stop test VM
        if: always()
        run: |
          make test-clean
      - name: Upload serial log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: serial.log
          path: tests/serial.log

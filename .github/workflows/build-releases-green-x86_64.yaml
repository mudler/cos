name: release-green-x86_64
on:
 push:
   tags:
     - v*
concurrency:
  group: ci-release-green-x86_64-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true
jobs:
  build-green-x86_64:
    runs-on: ubuntu-latest
    env:
      LUET_ARCH: x86_64
      FLAVOR: green
      ARCH: x86_64
      FINAL_REPO: quay.io/costoolkit/releases-green
      DOWNLOAD_METADATA: false
      PUSH_CACHE: true
      REPO_CACHE: quay.io/costoolkit/build-green-cache
    steps:
      - name: Release space from worker â™»
        if: always()
        run: |
          du -hcs /var/lib/snapd/snaps/* 
          # from https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh
          df -h
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y '^mongodb-.*' || true
          sudo apt-get remove -y '^mysql-.*' || true
          sudo apt-get remove -y '^temurin-.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk microsoft-edge-stable google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
          sudo rm -rf /opt/ghc # removes haskell
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" # removes all pre-cached tools (node, go, python, ruby) to free around 6Gb
          sudo rm -rf /usr/local/graalvm/
          sudo rm -rf /usr/local/.ghcup/
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          df -h
      - name: Install Go
        uses: actions/setup-go@v3
        with:
            go-version: '1.18.8'
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Install CI plugins
        run: |
            sudo cp -rfv .github/plugins/* /usr/bin/
      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Run make deps_ci
        run: |
          export DOCKER_INSTALL=true
          sudo -E make deps_ci
      - name: Run make validate
        run: |
          sudo -E make validate
      - name: Build packages ðŸ”§
        run: |
          mkdir build || true
          pushd ./.github
          go build -o build build.go
          popd
          sudo -E ./.github/build
          ls -liah $PWD/build
          sudo chmod -R 777 $PWD/build
      - name: Generate manifests
        run: |
          for f in build/*tar*; do
            [ -e "$f" ] || continue
            sudo -E luet mtree -- generate $f -o "$f.mtree"
          done
      - name: Append manifests to metadata
        run: |
          for f in build/*mtree; do
            [ -e "$f" ] || continue
            BASE_NAME=`basename -s .package.tar.zst.mtree $f`
            sudo -E .github/append_manifests.py build/$BASE_NAME.metadata.yaml $f mtree
          done
      - name: Fix git permissions for CVE-2022-24765
        # This fixes running git commands on our git directory under sudo user
        # See https://github.blog/2022-04-12-git-security-vulnerability-announced/ for more info
        run: |
          sudo git config --global --add safe.directory ${{ github.workspace }}
          git config --global --add safe.directory ${{ github.workspace }}
      - name: Run make create-repo
        run: |
          sudo -E make create-repo
      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: build-green-x86_64
          path: build
          if-no-files-found: error
      - name: Release space from worker â™»
        if: always()
        run: |
          du -hcs /var/lib/snapd/snaps/* 
          # from https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh
          df -h
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y '^mongodb-.*' || true
          sudo apt-get remove -y '^mysql-.*' || true
          sudo apt-get remove -y '^temurin-.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk microsoft-edge-stable google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
          sudo rm -rf /opt/ghc # removes haskell
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" # removes all pre-cached tools (node, go, python, ruby) to free around 6Gb
          sudo rm -rf /usr/local/graalvm/
          sudo rm -rf /usr/local/.ghcup/
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          df -h
      - name: Send failed status to slack
        if: failure()
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Workflow release-green-x86_64 failed on job ${{ github.job }}"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github:",
                         "emoji": true
                        },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  image-link-green:
    runs-on: ubuntu-latest
    needs: publish-green
    steps:
      - uses: actions/checkout@v3
      - name: Run make deps_ci
        run: |
          export DOCKER_INSTALL=true
          sudo -E make deps_ci
      - name: Generate link for green
        run: |
            source .github/helpers.sh
            PACKAGE_VERSION=$(cos_package_version)
            export COS_VERSION="${PACKAGE_VERSION/+/-}"
            echo "quay.io/costoolkit/releases-green:cos-system-${COS_VERSION}" > images-green-x86_64.txt
      - uses: actions/upload-artifact@v3
        with:
          name: images-green-x86_64.txt
          path: |
            images-green-x86_64.txt
      - name: Send failed status to slack
        if: failure()
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Workflow release-green-x86_64 failed on job ${{ github.job }}"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github:",
                         "emoji": true
                        },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  publish-green:
    runs-on: ubuntu-latest
    needs:
    - build-green-x86_64
    permissions:
      id-token: write  # undocumented OIDC support.
    env:
      FLAVOR: green
      ARCH: x86_64
      FINAL_REPO: quay.io/costoolkit/releases-green
      COSIGN_REPOSITORY: quay.io/costoolkit/releases-green
      DOWNLOAD_METADATA: true
      DOWNLOAD_ONLY: true
      DOWNLOAD_FATAL_MISSING_PACKAGES: true
      COSIGN_EXPERIMENTAL: 1 # use keyless signing
    steps:
      - name: Release space from worker â™»
        if: always()
        run: |
          du -hcs /var/lib/snapd/snaps/* 
          # from https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh
          df -h
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y '^mongodb-.*' || true
          sudo apt-get remove -y '^mysql-.*' || true
          sudo apt-get remove -y '^temurin-.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk microsoft-edge-stable google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
          sudo rm -rf /opt/ghc # removes haskell
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" # removes all pre-cached tools (node, go, python, ruby) to free around 6Gb
          sudo rm -rf /usr/local/graalvm/
          sudo rm -rf /usr/local/.ghcup/
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          df -h
      - name: Install Go
        uses: actions/setup-go@v3
        with:
            go-version: '1.18.8'
      - uses: actions/checkout@v3
      - run: |
          git fetch --prune --unshallow
      - name: Install CI plugins
        run: |
            sudo cp -rfv .github/plugins/* /usr/bin/
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2
      - name: Fix cosign binary for root
        run: |
          cosign_bin="$HOME/.cosign/cosign"
          sudo ln -s $cosign_bin /usr/bin/cosign
      - name: Verify cosign for sudo
        run: sudo -E cosign version
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
            registry: quay.io
            username: ${{ secrets.QUAY_USERNAME }}
            password: ${{ secrets.QUAY_PASSWORD }}
      - name: Run make deps_ci
        run: |
          export DOCKER_INSTALL=true
          sudo -E make deps_ci
      - name: Download result for build
        uses: actions/download-artifact@v3
        with:
          name: build-green-x86_64
          path: build
      - name: Add build repository
        run: |
          export DOCKER_INSTALL=true
          sudo -E make add_local_repo
      - name: Grab metadata from remotes
        run: |
          pushd ./.github
          go build -o build build.go
          popd
          sudo -E ./.github/build
          ls -liah $PWD/build
      - name: Fix git permissions for CVE-2022-24765
        # This fixes running git commands on our git directory under sudo user
        # See https://github.blog/2022-04-12-git-security-vulnerability-announced/ for more info
        run: |
          sudo git config --global --add safe.directory ${{ github.workspace }}
          git config --global --add safe.directory ${{ github.workspace }}
      - name: Publish to DockerHub ðŸš€
        run: |
          sudo -E make publish-repo
      - name: Sign artifacts
        run: |
          make build_signer
          sudo -E make sign_artifacts
          # Also sign the default repository.yaml files pushed along with the snapshot id
          sudo -E REFERENCEID=repository.yaml make sign_artifacts
      - name: Send failed status to slack
        if: failure()
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Workflow release-green-x86_64 failed on job ${{ github.job }}"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github:",
                         "emoji": true
                        },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

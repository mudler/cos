---
name: 'Build multi-arch embedded devices example images'

on:
  push:
    branches:
      - master
      - arm_adaptations
    tags:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tag: "odroid-c2-"
            dockerfile: "examples/odroid-c2"
            platforms: "linux/arm64"
            model: odroid_c2
          - tag: "rpi-"
            dockerfile: "examples/rpi"
            platforms: "linux/arm64"
            model: rpi64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run make deps
        run: |
          sudo -E make deps
          sudo luet install --no-spinner -y toolchain/yq
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=quay.io/costoolkit/examples
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${{ matrix.tag }}${VERSION},${DOCKER_IMAGE}:${{ matrix.tag }}${SHORTREF}"
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${{ matrix.tag }}latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=current::${DOCKER_IMAGE}:${{ matrix.tag }}${SHORTREF}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./${{ matrix.dockerfile }}
          file: ./${{ matrix.dockerfile }}/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      - name: Export cos version
        run: |
             source .github/helpers.sh
             echo "COS_VERSION=$(cos_version)" >> $GITHUB_ENV
      - name: Build Image
        id: build_image
        run: |
          mkdir build
          sudo ./images/arm-img-builder.sh --model ${{ matrix.model }} --docker-image ${{ steps.prep.outputs.current }} build/cOS-example-${{ matrix.tag }}$COS_VERSION.img
      - name: Upload Image
        run: |
          sudo tar cvf build.tar build
          sudo luet util pack quay.io/costoolkit/examples:${{ matrix.tag }}$COS_VERSION.img build.tar image.tar
          sudo -E docker load -i image.tar
          sudo -E docker push quay.io/costoolkit/examples:${{ matrix.tag }}$COS_VERSION.img
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}-image
          path: build
          if-no-files-found: error
      - name: "Release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

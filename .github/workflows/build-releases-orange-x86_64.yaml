name: release-orange-x86_64
on: 
 push:
   tags:
     - v*
concurrency:
  group: ci-release-orange-x86_64-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true
jobs:
  build-orange-x86_64:
    runs-on: ubuntu-latest
    env:
      LUET_ARCH: x86_64
      FLAVOR: orange
      ARCH: x86_64
      PLUGINS: cleanup-images
      FINAL_REPO: quay.io/costoolkit/releases-orange
      DOWNLOAD_METADATA: false
      PUSH_CACHE: true
      REPO_CACHE: quay.io/costoolkit/build-orange-cache
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Install CI plugins
        run: |
            sudo cp -rfv .github/plugins/* /usr/bin/
      - name: Login to Quay Registry
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Run make deps
        run: |
          sudo -E make deps
      - name: Run make validate
        run: |
          sudo -E make validate
      - name: Build packages ðŸ”§
        run: |
          export PATH=$PATH:/usr/local/go/bin
          mkdir build || true
          pushd ./.github
          go build -o build
          popd
          sudo -E ./.github/build
          ls -liah $PWD/build
          sudo chmod -R 777 $PWD/build
      - name: Generate manifests
        run: |
          for f in build/*tar*; do
            [ -e "$f" ] || continue
            sudo -E luet mtree -- generate $f -o "$f.mtree"
          done
      - name: Append manifests to metadata
        run: |
          for f in build/*mtree; do
            [ -e "$f" ] || continue
            BASE_NAME=`basename -s .package.tar.zst.mtree $f`
            sudo -E .github/append_manifests.py build/$BASE_NAME.metadata.yaml $f mtree
          done
      - name: Run make create-repo
        run: |
          sudo -E make create-repo
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: build-orange-x86_64
          path: build
          if-no-files-found: error
  image-link-orange:
    runs-on: ubuntu-latest
    needs: publish-orange
    steps:
      - uses: actions/checkout@v2
      - name: Run make deps
        run: |
          sudo -E make deps
      - name: Generate link for orange
        run: |
            source .github/helpers.sh
            PACKAGE_VERSION=$(cos_package_version)
            export COS_VERSION="${PACKAGE_VERSION/+/-}"
            echo "quay.io/costoolkit/releases-orange:cos-system-${COS_VERSION}" > images-orange-x86_64.txt
      - uses: actions/upload-artifact@v2
        with:
          name: images-orange-x86_64.txt
          path: |
            images-orange-x86_64.txt
  publish-orange:
    runs-on: ubuntu-latest
    needs:
    - build-orange-x86_64
    permissions:
      id-token: write  # undocumented OIDC support.
    env:
      FLAVOR: orange
      ARCH: x86_64
      FINAL_REPO: quay.io/costoolkit/releases-orange
      DOWNLOAD_METADATA: true
      DOWNLOAD_ALL: true
      DOWNLOAD_ONLY: true
      COSIGN_EXPERIMENTAL: 1 # use keyless signing
      COSIGN_REPOSITORY: raccos/releases-orange
      PUBLISH_ARGS: "--plugin luet-cosign"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Install CI plugins
        run: |
            sudo cp -rfv .github/plugins/* /usr/bin/
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
            registry: quay.io
            username: ${{ secrets.QUAY_USERNAME }}
            password: ${{ secrets.QUAY_PASSWORD }}
      - name: Run make deps
        run: |
          sudo -E make deps
      - name: Download result for build
        uses: actions/download-artifact@v2
        with:
          name: build-orange-x86_64
          path: build
      - name: Grab metadata from remotes
        run: |
          export PATH=$PATH:/usr/local/go/bin
          pushd ./.github
          go build -o build
          popd
          sudo -E ./.github/build
          ls -liah $PWD/build
      - name: Publish to DockerHub ðŸš€
        run: |
          sudo -E make publish-repo
      - name: upload cosign logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: luetcosign.log.zip
          path: /tmp/luet-cosign.log
          if-no-files-found: warn

.PHONY: prepare-test
prepare-test:
ifeq ("$(QCOW2)","")
	@echo "No qcow2 disk found, run 'make build-disk' first"
	@exit 1
endif
	@scripts/run_vm.sh start $(QCOW2)
	@echo "VM started from $(QCOW2)"

.PHONY: prepare-installer-test
prepare-installer-test:
ifeq ("$(ISO)","")
	@echo "No ISO image found, run 'make build-iso' first"
	@exit 1
endif
	@scripts/run_vm.sh start $(ISO)
	@echo "VM started from $(ISO)"

.PHONY: test-clean
test-clean:
	@scripts/run_vm.sh stop
	@scripts/run_vm.sh clean

.PHONY: test-smoke
test-smoke: prepare-test
	cd tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./smoke

.PHONY: test-grubfallback
test-grubfallback: prepare-test
	cd $(ROOT_DIR)/tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./grubfallback

.PHONY: test-recovery
test-recovery: prepare-test
	cd $(ROOT_DIR)/tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./recovery

.PHONY: test-fallback
test-fallback: prepare-test
	cd $(ROOT_DIR)/tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./fallback

.PHONY: test-fsck
test-reset: prepare-test
	cd $(ROOT_DIR)/tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./fsck

.PHONY: test-upgrade
test-upgrades-local: prepare-test
	cd $(ROOT_DIR)/tests && go run github.com/onsi/ginkgo/v2/ginkgo $(GINKGO_ARGS) ./upgrade
